import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

// you NEED to run this program locally because it opens up another window!!!

public class Calculator extends JFrame implements ActionListener {
    
    // create UI components
    private JTextField display;
    private JButton[] numberButtons;
    private JButton[] operatorButtons;
    private JButton equalsButton, clearButton;
    private String operator = "";
    private double firstOperand = 0;

    public Calculator() {
        // window settings
        setTitle("Calculator");
        setSize(400, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // display
        display = new JTextField();
        display.setFont(new Font("Arial", Font.PLAIN, 40));
        display.setEditable(false);
        display.setHorizontalAlignment(JTextField.RIGHT);
        add(display, BorderLayout.NORTH);

        // buttons
        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(4, 4));

        // create number buttons
        numberButtons = new JButton[10];
        for (int i = 0; i < 10; i++) {
            numberButtons[i] = new JButton(String.valueOf(i));
            numberButtons[i].addActionListener(this);
            panel.add(numberButtons[i]);
        }

        // create operation buttons
        String[] operators = {"+", "-", "*", "/"};
        operatorButtons = new JButton[operators.length];
        for (int i = 0; i < operators.length; i++) {
            operatorButtons[i] = new JButton(operators[i]);
            operatorButtons[i].addActionListener(this);
            panel.add(operatorButtons[i]);
        }

        // equal and c button
        equalsButton = new JButton("=");
        equalsButton.addActionListener(this);
        clearButton = new JButton("C");
        clearButton.addActionListener(this);

        // panel for equal and c button
        JPanel bottomPanel = new JPanel();
        bottomPanel.setLayout(new GridLayout(1, 2));
        bottomPanel.add(clearButton);
        bottomPanel.add(equalsButton);

        // add to frame
        add(panel, BorderLayout.CENTER);
        add(bottomPanel, BorderLayout.SOUTH);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand();

        if (command.charAt(0) == 'C') {
            // reset everything
            display.setText("");
            firstOperand = 0;
            operator = "";
        } else if (command.charAt(0) == '=') {
            // calculation
            double secondOperand = Double.parseDouble(display.getText());
            double result = 0;

            switch (operator) {
                case "+":
                    result = firstOperand + secondOperand;
                    break;
                case "-":
                    result = firstOperand - secondOperand;
                    break;
                case "*":
                    result = firstOperand * secondOperand;
                    break;
                case "/":
                    if (secondOperand != 0) {
                        result = firstOperand / secondOperand;
                    } else {
                        display.setText("Error");
                        return;
                    }
                    break;
            }
            display.setText(String.valueOf(result));
            operator = "";
        } else if (command.charAt(0) >= '0' && command.charAt(0) <= '9') {
            // add number
            display.setText(display.getText() + command);
        } else {
            // set operator
            if (!display.getText().equals("")) {
                firstOperand = Double.parseDouble(display.getText());
                operator = command;
                display.setText("");
            }
        }
    }

    public static void main(String[] args) {
        // create calculator
        Calculator calc = new Calculator();
        calc.setVisible(true);
    }
}
